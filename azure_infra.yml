
# Step 1: Define the Azure resource group
- name: Create Azure resource group
  azure_rm_resourcegroup:
    name: myResourceGroup
    location: eastus

# Step 2: Define the Azure virtual network
- name: Create Azure virtual network
  azure_rm_virtualnetwork:
    resource_group: myResourceGroup
    name: myVirtualNetwork
    address_prefixes: 10.0.0.0/16

# Step 3: Define the Azure subnet
- name: Create Azure subnet
  azure_rm_subnet:
    resource_group: myResourceGroup
    virtual_network_name: myVirtualNetwork
    name: mySubnet
    address_prefix: 10.0.0.0/24

# Step 4: Define the Azure public IP address
- name: Create Azure public IP address
  azure_rm_publicipaddress:
    resource_group: myResourceGroup
    allocation_method: Static
    name: myPublicIP

# Step 5: Define the Azure network security group
- name: Create Azure network security group
  azure_rm_securitygroup:
    resource_group: myResourceGroup
    name: myNSG

# Step 6: Define the Azure network security group rule for SSH
- name: Create Azure network security group rule for SSH
  azure_rm_securitygrouprule:
    resource_group: myResourceGroup
    security_group_name: myNSG
    name: SSH
    protocol: Tcp
    destination_port_range: 22
    access: Allow
    priority: 100

# Step 7: Define the Azure network security group rule for HTTP
- name: Create Azure network security group rule for HTTP
  azure_rm_securitygrouprule:
    resource_group: myResourceGroup
    security_group_name: myNSG
    name: HTTP
    protocol: Tcp
    destination_port_range: 80
    access: Allow
    priority: 200

# Step 8: Define the Azure network security group rule for HTTPS
- name: Create Azure network security group rule for HTTPS
  azure_rm_securitygrouprule:
    resource_group: myResourceGroup
    security_group_name: myNSG
    name: HTTPS
    protocol: Tcp
    destination_port_range: 443
    access: Allow
    priority: 300

# Step 9: Define the Azure network interface
- name: Create Azure network interface
  azure_rm_networkinterface:
    resource_group: myResourceGroup
    virtual_network_name: myVirtualNetwork
    subnet_name: mySubnet
    public_ip_name: myPublicIP
    security_group_name: myNSG
    name: myNIC

# Step 10: Define the Azure load balancer
- name: Create Azure load balancer
  azure_rm_lb:
    resource_group: myResourceGroup
    name: myLoadBalancer
    frontend_ip_configurations:
      - name: myFrontendIP
        public_ip_address: myPublicIP
    backend_address_pools:
      - name: myBackendPool
    load_balancing_rules:
      - name: myHTTPRule
        frontend_ip_configuration: myFrontendIP
        frontend_port: 80
        backend_port: 80
        protocol: Tcp
        idle_timeout_in_minutes: 5
        enable_floating_ip: false
        load_distribution: Default
        probe:
          protocol: Http
          port: 80
          request_path: /
          interval_in_seconds: 15
          number_of_probes: 2

# Step 11: Define the Azure virtual machine
- name: Create Azure virtual machine
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: myVM
    vm_size: Standard_DS2_v2
    admin_username: myUsername
    admin_password: myPassword
    network_interface_names: myNIC
    os_disk_name: myOSDisk
    os_disk_caching: ReadWrite
    os_disk_create_option: FromImage
    image:
      offer: UbuntuServer
      publisher: Canonical
      sku: 18.04-LTS
      version: latest


- name: Install required packages
  yum:
    name:
      - httpd
      - git
    state: present

- name: Start and enable Apache service
  service:
    name: httpd
    state: started
    enabled: yes

- name: Clone React app repository from GitHub
  git:
    repo: https://github.com/sing0017/real-chat-app.git
    dest: /chatapp  # The destination where you want to clone the repository
    version: main  # The branch or tag you want to clone (e.g., master, main)
  become: true  # To run the task with elevated privileges
  become_user: harmansingh  # The user to execute the task as
  args:
    force: yes

- name: Install Node.js and npm
  yum:
    name:
      - nodejs
    state: present

- name: Install nodemon globally
  command: npm install -g nodemon
  become: yes

- name: Install app dependencies (client)
  become: yes
  become_user: harmansingh
  command: npm install
  args:
    chdir: /chatapp/client

- name: Install app dependencies (server)
  become: yes
  become_user: harmansingh
  command: npm install
  args:
    chdir: /chatapp/server

- name: Build the client side
  command: npm run build
  args:
    chdir: /chatapp/client
  become_user: harmansingh

- name: Run the server on port 5000
  command: node index.js
  args:
    chdir: /chatapp/server/
  async: 300
  poll: 0

- name: Run the client on port 3000
  command: npm start
  args:
    chdir: /chatapp/client
  async: 300
  poll: 0

---
- name: My Azure VM Configuration
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Configure Azure VM
      azure_rm_virtualmachine:
        resource_group: my_resource_group
        name: my_vm
        vm_size: Standard_DS1_v2
        admin_username: my_username
        admin_password: my_password
        image:
          offer: UbuntuServer
          publisher: Canonical
          sku: 18.04-LTS
          version: latest
        os_disk_size_gb: 30
        data_disks:
          - lun: 0
            disk_size_gb: 100
        network_interfaces:
          - name: my_nic
            primary: true
            private_ip_allocation_method: Dynamic
            public_ip_address_allocation: Dynamic
        state: present

      register: vm_result

    - name: Print VM IP Address
      debug:
        var: vm_result.public_ip_address
